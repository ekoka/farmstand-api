# coding=utf-8
import os
import locale
from collections import OrderedDict, namedtuple
import logging
from . import test_secrets as secrets

# SECRET_KEY
SECRET_KEY = secrets.SECRET_KEY

# ------------------------- #
# I18N and L10N

LOCALE = 'fr_CA.UTF-8'
locale.setlocale(locale.LC_ALL, LOCALE)

DEFAULT_LANG = u'fr'
AVAILABLE_LANGS = OrderedDict(((u'fr',u'Fran√ßais'), (u'en',u'English')))

#BABEL_DOMAIN = 'messages'
BABEL_TRANSLATION_DIRECTORIES = 'translations'

PROJECT_NAME = 'b2bapi'
# PATHS
filepath = os.path.realpath(__file__)
PROJECT_PATH = os.path.dirname(os.path.dirname(filepath))
APP_PATH = os.path.join(PROJECT_PATH, 'b2bapi')

# logging
LOGGING_PATH = os.path.join(PROJECT_PATH, 'logs/coding.log')

# static files
STATIC_PATH = os.path.join(PROJECT_PATH, 'static')

AspectRatio = namedtuple('AspectRatio', 'vertical horizontal')
IMAGE = dict(
    DUMP = '/home/mike/tmp/simpleb2b/images/tests/',
    MAX_FILESIZE = 10000000, #10mb
    ASPECT_RATIO = AspectRatio(0.3333, 3.0), # 3:1 (vertical, horizontal)
    WEB_MAX_LENGTH = 900, # max width/height length
    SUPPORTED_FORMATS = {'JPEG': 'jpg', 'JPG': 'jpg', 'PNG': 'png'},
)

THUMBOR_SERVER =  secrets.THUMBOR_SERVER # 'http://localhost:9001'
THUMBOR_SECURITY_KEY = secrets.THUMBOR_SECURITY_KEY

GMAIL_LOGIN = secrets.GMAIL_LOGIN #u'info@simpleproductcatalog.com'
GMAIL_PASSWORD = secrets.GMAIL_PASSWORD #u'Wujo6677'


connect_string = "{dialect}://{user}:{password}@{host}/{dbname}".format(
    dialect=secrets.DB_DIALECT, user=secrets.DB_USER, password=secrets.DB_PASSWORD, 
    host=secrets.DB_HOST, dbname=secrets.DB_NAME)
ident_connect_string = "{dialect}:///{dbname}".format(
    dialect=secrets.DB_DIALECT, dbname=secrets.DB_NAME)
SQLALCHEMY_DATABASE_URI = connect_string
FORCE_CREATE_DB_SCHEMA = False

SQLALCHEMY_TRACK_MODIFICATIONS = False

SQLALCHEMY_COMMIT_ON_TEARDOWN = True
# SQL ALCHEMY PROFILER
ENABLE_SQL_PROFILE_LOG = False

KEEP_TEST_DATABASE = False

SERVER_DOMAIN = 'simpleb2b.local'

HTTP_PORT = 8080 

DEV_MODE = False
DEBUG = True
TESTING = True

if TESTING:
    assert secrets.DB_NAME.startswith('test_') or secrets.DB_NAME.endswith('_test')
